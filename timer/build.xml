<project name="timer" default="dist" basedir=".">
    <description>
        Timer manager for pinewood derby software
    </description>
   <!-- NOTE The default target does NOT perform a clean build; do an explicit
        'clean' when in doubt. -->
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="../lib"/>
  <property name="templates" location="../templates"/>

  <property name="derbynet-timer" location="derbynet-timer"/>
  <property name="forge" location="electron-forge"/>

  <!-- Should be inherited from invoking task;
       these definitions are only backups -->
  <property name="release-series" value="development-build"/>
  <property name="git-rev-count" value=""/>
  <property name="git-dirty" value=""/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false"
           source="1.8" target="1.8">
        <classpath>
            <pathelement path="${src}"/>
            <pathelement location="${lib}/jssc.jar"/>
            <pathelement location="${lib}/Java-WebSocket-1.5.2.jar"/>
            <pathelement location="${lib}/json-20210307.jar"/>
        </classpath>
    </javac>
  </target>

  <target name="make-electron-forge">
      <mkdir dir="${forge}"/>
      <mkdir dir="${forge}/src"/>
      <mkdir dir="${forge}/src/css"/>
      <mkdir dir="${forge}/src/js"/>
      <mkdir dir="${forge}/src/js/timer"/>
  </target>

  <target name="timer.html" depends="make-electron-forge">
      <copy file="${templates}/timer.html"
            tofile="${forge}/src/timer.html">
            <filterchain>
                <replacetokens>
                    <token key="STARTPHP" value="!--"/>
                </replacetokens>
                <replacetokens>
                    <token key="ENDPHP" value="--"/>
                </replacetokens>
          </filterchain>
      </copy>
  </target>

  <target name="timer-profiles" depends="timer-jar, make-electron-forge">
      <!-- java task supposedly supports outputproperty, but it doesn't seem to
           work. -->
      <exec executable="java" outputproperty="timer-profiles">
          <arg value="-cp"/>
          <!-- ${timer-jar-dir} doesn't work in arg value, apparently. -->
          <arg value="${dist}/lib/derby-timer.jar"/>
          <arg value="org.jeffpiazza.derby.profiles.AllProfiles"/>
      </exec>
      <copy file="${templates}/timer-profiles.js"
            tofile="${forge}/src/js/timer/profiles.js" overwrite="true">
          <filterchain>
              <replacetokens>
                  <token key="PROFILES" value="${timer-profiles}"/>
              </replacetokens>
          </filterchain>
      </copy>
  </target>

  <target name="prepare-electron-forge" depends="make-electron-forge,
                                                 timer.html, timer-profiles">
      <copy file="${derbynet-timer}/package.json" todir="${forge}"/>
      <copy file="${derbynet-timer}/timer.js" todir="${forge}/src"/>
      <copy todir="${forge}/src/css">
          <fileset dir="../website/css">
              <include name="global.css"/>
              <include name="mobile.css"/>
          </fileset>
          <fileset dir="${derbynet-timer}/src/css">
              <include name="timer.css"/>
          </fileset>
      </copy>
      <copy todir="${forge}/src/js">
          <fileset dir="../website/js">
              <include name="jquery.js"/>
              <include name="mobile.js"/>
              <include name="ajax-setup.js"/>
              <include name="modal.js"/>
          </fileset>
      </copy>
      <copy todir="${forge}/src/js/timer">
        <fileset dir="${derbynet-timer}/src/js">
            <include name="**"/>
        </fileset>
      </copy>
  </target>

  <target name="electron-app" depends="prepare-electron-forge"
          description="Builds the stand-alone derbynet-timer app">
      <exec executable="yarn">
          <arg value="--cwd"/>
          <arg value="${forge}"/>
          <arg value="install"/>
      </exec>
      <exec executable="yarn">
          <arg value="--cwd"/>
          <arg value="${forge}"/>
          <arg value="make"/>
      </exec>
      <!-- TODO move ${forge}/out/derbynet-timer-darwin-x64/derbynet-timer.app/ -->
  </target>

  <target name="timer-jar" depends="compile"
        description="generate the jar file" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <jar jarfile="${dist}/lib/derby-timer.jar">
        <manifest>
            <attribute name="Main-Class" value="org.jeffpiazza.derby.TimerMain"/>
            <attribute name="Built-By" value="${user.name}"/>
            <section name="common">
                <attribute name="Implementation-Version" value="${git-rev-count}${git-dirty} ${TODAY}"/> 
            </section>
            <section name="derbynet">
                <attribute name="version" value="${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>
            </section>
        </manifest>

        <fileset  dir="${build}">
            <exclude name="**/*Test.*"/>
            <exclude name="**/*Test$*"/>
        </fileset>
        <fileset dir="../website/img">
            <include name="status/*.png"/>
        </fileset>
        <!--zipgroupfileset dir="lib" includes="*.jar" /--> 
        <zipgroupfileset dir="${lib}" includes="jssc.jar"/>
        <!-- For no apparently good reason,  jssc.jar now references slf4j,
             which results in an ugly runtime warning about not having
             configured a facility no one asked for.  This silences the
             warning. -->
        <zipgroupfileset dir="${lib}" includes="slf4j-nop-1.7.30.jar"/>
        <zipgroupfileset dir="${lib}" includes="Java-WebSocket-1.5.2.jar"/>
        <zipgroupfileset dir="${lib}" includes="json-20210307.jar"/>
    </jar>
  </target>

  <target name="dist" depends="timer-jar">
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>
