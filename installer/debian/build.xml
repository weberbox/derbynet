<project name="derbynet-deb" default="dist" basedir=".">
    <description>
        Build Debian binary packages for DerbyNet.
    
        The binary archives are constructed "by hand", so the task can be
         accomplished on platforms that don't provide Debian package tooling. -->
    </description>

    <!-- These properties isolate us from ant file location -->
    <property name="website" location="../../website"/>
    <property name="timer" location="../../timer"/>
    <property name="timer-dist" location="${timer}/dist/lib"/>
    <property name="docs" location="../../docs"/>
    <property name="docs-dist" location="${docs}/dist"/>
    <property name="extras" location="../../extras"/>
    <property name="output-dir" location="../../.."/>
    <property name="nginx-configs" location="../nginx-configs"/>
    
    <!-- These should be inherited from invoking task;
         these definitions are only backups -->
    <property name="release-series" value="development-build"/>
    <property name="git-rev-count" value=""/>
    <property name="git-dirty" value=""/>

    <property name="deb-label"
              value="derbynet_${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>

    <property name="deb-server-label"
              value="derbynet-server_${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>
    <property name="deb-timer-label"
              value="derbynet-timer_${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>
    <property name="deb-extras-label"
              value="derbynet-extras_${release-series}-${git-rev-count}${git-dirty}-${DSTAMP}"/>

    <!-- debian-root is where we assemble the files we intend to install on the
         destination system -->
    <property name="debian-root"
              location="derbynet_${release-series}-${git-rev-count}${git-dirty}"/>
    <!-- debian-stage is where we assemble the very specific files that get
         archived into the final deb file. -->
    <property name="debian-stage" location="debian-stage"/>

    <target name="debian-stage-website">
        <mkdir dir="${debian-root}/var/www/html/derbynet"/>
        <copy todir="${debian-root}/var/www/html/derbynet" overwrite="true">
            <fileset dir="${website}">
                <include name="**"/>
                <exclude name="local/**"/>
            </fileset>
        </copy>
        <mkdir dir="${debian-root}/etc/nginx/derbynet"/>
        <copy todir="${debian-root}/etc/nginx/derbynet">
            <fileset dir="${nginx-configs}/derbynet">
                <include name="**"/>
            </fileset>
        </copy>

        <copy todir="${debian-root}/var/www/html">
            <fileset dir="${nginx-configs}">
                <include name="index.html"/>
            </fileset>
        </copy>
    </target>

    <target name="debian-stage-timer">
        <mkdir dir="${debian-root}/usr/bin"/>
        <copy todir="${debian-root}/usr/bin">
            <fileset dir="${timer-dist}">
                <include name="derby-timer.jar"/>
            </fileset>
        </copy>
        <!-- Execute permission set in tarfileset -->
    </target>

    <target name="debian-stage-extras">
        <mkdir dir="${debian-root}/etc"/>
        <copy todir="${debian-root}/etc">
            <fileset dir="${extras}">
                <include name="derbynet.conf"/>
            </fileset>
        </copy>
        <touch mkdirs="true" file="${debian-root}/etc/derbynet.d/.placeholder"/>
        <copy todir="${debian-root}/usr/share/derbynet/autostart">
            <fileset dir="${extras}/autostart">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian-root}/usr/share/derbynet/conf">
            <fileset dir="${extras}/conf">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian-root}/usr/share/derbynet/scripts">
            <fileset dir="${extras}/scripts">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian-root}/usr/share/derbynet/sounds">
            <fileset dir="${extras}/sounds">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${debian-root}/usr/share/derbynet/tools">
            <fileset dir="${extras}/tools">
                <include name="**"/>
            </fileset>
        </copy>
        <!-- Execute permissions for scripts are set in tarfileset -->
        <mkdir dir="${debian-root}/usr/share/derbynet/extras"/>
        <copy todir="${debian-root}/usr/share/derbynet/extras">
            <fileset dir="${extras}">
                <include name="rpi/**"/>
            </fileset>
        </copy>
    </target>

    <target name="debian-stage-docs">
        <mkdir  dir="${debian-root}/usr/share/derbynet/docs"/>
        <copy todir="${debian-root}/usr/share/derbynet/docs">
            <fileset dir="${docs-dist}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>

    <target name="debian-server" depends="debian-stage-website,
                                          debian-stage-docs">
        <mkdir dir="${debian-stage}"/>
        <tar destfile="${debian-stage}/data.tar.gz" compression="gzip">
            <tarfileset dir="${debian-root}">
                <include name="var/www/**"/>
                <include name="etc/nginx/**"/>
                <!-- /usr/share reliably exists on the target, but
                     usr/share/derbynet has to be created explicitly.  The "**"
                     entry that follows will only try to create the final
                     .../docs directory. -->
                <include name="usr/share/derbynet"/>
                <include name="usr/share/derbynet/docs/**"/>
                <exclude name="usr/share/derbynet/docs/Timer Operation.pdf"/>
            </tarfileset>
        </tar>

        <copy file="./server/control" tofile="${debian-stage}/control">
            <filterchain>
                <replacetokens>
                    <token key="BUILD" value="${git-rev-count}"/>
                </replacetokens>
            </filterchain>
        </copy>
        <tar destfile="${debian-stage}/control.tar.gz" compression="gzip">
            <tarfileset file="./server/conffiles"/>
            <tarfileset file="${debian-stage}/control"/>
            <tarfileset file="./server/postinst" filemode="755"/>
            <tarfileset file="./server/prerm" filemode="755"/>
        </tar>
        <delete file="${debian-stage}/control" failonerror="false" quiet="true"/>

        <echo file="${debian-stage}/debian-binary">2.0&#10;</echo>

        <delete file="${output-dir}/${deb-server-label}.deb" failonerror="false" quiet="true"/>
        <exec executable="ar">
            <arg value="-q"/>
            <arg value="${output-dir}/${deb-server-label}.deb"/>
            <arg value="${debian-stage}/debian-binary"/>
            <arg value="${debian-stage}/control.tar.gz"/>
            <arg value="${debian-stage}/data.tar.gz"/>
        </exec>

        <delete dir="${debian-stage}"/>
    </target>

    <target name="debian-timer"
            depends="debian-stage-timer, debian-stage-extras, debian-stage-docs">
        <mkdir dir="${debian-stage}"/>
        <tar destfile="${debian-stage}/data.tar.gz" compression="gzip">
            <tarfileset dir="${debian-root}">
                <!-- /usr/share reliably exists on the target, but
                     usr/share/derbynet has to be created explicitly.  -->
                <include name="usr/share/derbynet"/>
                <include name="usr/share/derbynet/autostart"/>
                <include name="usr/share/derbynet/autostart/derby-timer.desktop"/>
                <include name="usr/share/derbynet/docs"/>
                <include name="usr/share/derbynet/docs/Timer Operation.pdf"/>
                <include name="usr/share/derbynet/scripts"/>
                <include name="usr/share/derbynet/scripts/derby-timer.sh"/>
            </tarfileset>
            <!-- This second tarfileset sets executable permissions for these
                 files. -->
            <tarfileset dir="${debian-root}" filemode="755">
                <include name="usr/bin/**"/>
            </tarfileset>
        </tar>

        <copy file="./timer/control" tofile="${debian-stage}/control">
            <filterchain>
                <replacetokens>
                    <token key="BUILD" value="${git-rev-count}"/>
                </replacetokens>
            </filterchain>
        </copy>
        <tar destfile="${debian-stage}/control.tar.gz" compression="gzip">
            <tarfileset file="./timer/conffiles"/>
            <tarfileset file="${debian-stage}/control"/>
        </tar>
        <delete file="${debian-stage}/control" failonerror="false" quiet="true"/>

        <echo file="${debian-stage}/debian-binary">2.0&#10;</echo>

        <delete file="${output-dir}/${deb-timer-label}.deb" failonerror="false" quiet="true"/>
        <exec executable="ar">
            <arg value="-q"/>
            <arg value="${output-dir}/${deb-timer-label}.deb"/>
            <arg value="${debian-stage}/debian-binary"/>
            <arg value="${debian-stage}/control.tar.gz"/>
            <arg value="${debian-stage}/data.tar.gz"/>
        </exec>
        <delete dir="${debian-stage}"/>
    </target>

    <target name="debian-extras" depends="debian-stage-extras">
        <mkdir dir="${debian-stage}"/>
        <tar destfile="${debian-stage}/data.tar.gz" compression="gzip">
            <tarfileset dir="${debian-root}">
                <include name="etc/*"/>
                <include name="etc/derbynet.d/**"/>
                <include name="usr/share/derbynet"/>
                <include name="usr/share/derbynet/autostart/**"/>
                <exclude name="usr/share/derbynet/autostart/derby-timer.desktop"/>
                <include name="usr/share/derbynet/conf/**"/>
                <include name="usr/share/derbynet/extras/**"/>
                <include name="usr/share/derbynet/sounds/**"/>
            </tarfileset>
            <!-- This second tarfileset sets executable permissions for these
                 files. -->
            <tarfileset dir="${debian-root}" filemode="755">
                <include name="usr/share/derbynet/scripts/**"/>
                <exclude name="usr/share/derbynet/scripts/derby-timer.sh"/>
            </tarfileset>
        </tar>

        <copy file="./extras/control" tofile="${debian-stage}/control">
            <filterchain>
                <replacetokens>
                    <token key="BUILD" value="${git-rev-count}"/>
                </replacetokens>
            </filterchain>
        </copy>
        <tar destfile="${debian-stage}/control.tar.gz" compression="gzip">
            <tarfileset file="./extras/conffiles"/>
            <tarfileset file="${debian-stage}/control"/>
            <tarfileset file="./extras/postinst" filemode="755"/>
        </tar>
        <delete file="${debian-stage}/control" failonerror="false" quiet="true"/>

        <echo file="${debian-stage}/debian-binary">2.0&#10;</echo>

        <delete file="${output-dir}/${deb-extras-label}.deb" failonerror="false" quiet="true"/>
        <exec executable="ar">
            <arg value="-q"/>
            <arg value="${output-dir}/${deb-extras-label}.deb"/>
            <arg value="${debian-stage}/debian-binary"/>
            <arg value="${debian-stage}/control.tar.gz"/>
            <arg value="${debian-stage}/data.tar.gz"/>
        </exec>
        <delete dir="${debian-stage}"/>
    </target>

    <target name="dist" depends="debian-server, debian-timer, debian-extras">
        <delete dir="${debian-root}"/>
    </target>
</project>
